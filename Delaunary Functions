##################################################################################################
#Orient2D(a,b,c) returns 1 if a to the left of aff bc, -1 if to the right and 0 if on the line
##################################################################################################


A<-sample(1:6,6,replace=F); #Generates 1,2,,,,n in arbitrary order

p1<-c(A[1],A[2]); p2<-c(A[3],A[4]); p3<-c(A[5],A[6]);

Orient2D<-function(a,b,c){
  
  
  v1<-c(a[1]-c[1],a[2]-c[2]);
  v2<-c(b[1]-c[1],b[2]-c[2]);

  
  m <- array(c(v1,v2), dim=c(2,2))
  
  
  if(det(m)>0){return(1)}
  else if (det(m)<0){return(-1)}
  else(return(0))
  
  
  
}

print(A)
print(Orient2D(p1,p2,p3))


##################################################################################################
#InCircle(a,b,c,d) returns 1 if d is in the circle of a,b,c, -1 is outside, 0 on the same cicrle
###################################################################################################



A<-sample(1:8,8,replace=F); #Generates 1,2,,,,n in arbitrary order

p1<-c(A[1],A[2]); p2<-c(A[3],A[4]); p3<-c(A[5],A[6]);p4<-c(A[7],A[8]);

print(A)
print(p4)


InCircle<-function(a,b,c,d){
  
  v1<-c(a[1]-d[1],a[2]-d[2],((a[1]-d[1])^2+(a[2]-d[2])^2));
  v2<-c(b[1]-d[1],b[2]-d[2],((b[1]-d[1])^2+(b[2]-d[2])^2));
  v3<-c(c[1]-d[1],c[2]-d[2],((c[1]-d[1])^2+(c[2]-d[2])^2));
  
  m <- array(c(v1,v2,v3), dim=c(3,3))
  
  if(det(m)>0){return(1)}
  else if (det(m)<0){return(-1)}
  else(return(0))
  
}

print(InCircle(p1,p2,p3,p4))

